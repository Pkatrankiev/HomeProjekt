/**
Напишете програма, която управлява адресна книга. В адресната книга може да имаме
контакти на хора, като всеки контакт има име, телефон, имейл адрес, адрес. Адресът е отделен
обект и има следните полета: град, улица, номер.
Контактите може да се групират в категории, например „Семейство”, „Приятели” и т.н. Т.е.
всяка категория има списък с контакти и описание.
От адресната книга може да вземем списък с всички категории и списък с всички контакти.
Можем да добавяме контакт и категория по съответните полета.
В адресната книга можем да търсим контакти по име, по име на категория, по имейл адрес, по
част от адрес (т.е. имаме методи, които приемат съответния параметър и извеждат списък с
контакти).
1. Напишете класовете, които ще представят дадената структура.
2. Напишете програма, която при стартиране извежда в конзолата меню с опции:
1. Добави контакт
2. Добави категория
3. Изведи списък с всички контакти
4. Изведи списък с всички категории
5. Търси контакти по име
6. Търси контакти по категория
Незадължително:
3. Прочетете главата за обработка на изключения от книгата “Въведение в
програмирането с Java” (http://www.introprogramming.info/intro-java-book/readonline/
glava12-obrabotka-na-izklyuchenia/).
a. При добавяне на контакт с име със стойност null или празна стойност, нека
методът за добавяне на контакт да хвърля изключение IllegalArgumentException.
Това изключение трябва да бъде обработено, когато е избрана опцията за
добавяне на нов контакт.
b. Направете същото за метода за добавяне на категория, когато описанието на
категорията е null или празен низ.
4. Прочетете главата за текстови файлове от книгата “Въведение в програмирането с Java”
(http://www.introprogramming.info/intro-java-book/read-online/glava15-tekstovi-failove/).
a. Добавете в менюто опция за записване на контактите във файл. При избор на
тази опция, създайте текстов файл на компютъра, в който да е записан списък с
всички контакти от адресната книга.
 */
package AddressBook;